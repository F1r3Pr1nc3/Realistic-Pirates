##########################################################################
# Scripted Triggers for Pirate Waves.
#
# Written by ScepraX
##########################################################################

#############################################
# 	Variables								#
#############################################
# Ship limit for pirate countries.
# @count_ship_very_easy	= 250
# @count_ship_easy		= 500
# @count_ship_medium	= 1000
# @count_ship_hard		= 2000
# @count_ship_insane 	= 4000

#############################################
# 	Triggers								#
#############################################
# Checks if the mod should spawn pirates.
is_pirate_waves_active = {
	has_global_flag = pirate_waves_active
	# years_passed > 9
	NOR = {
		has_global_flag = gray_goo_crisis_active
		has_global_flag = marauder_crisis_ongoing
		has_global_flag = galactic_community_crisis_fighting
	}
	any_playable_country = { is_pirate_waves_player = yes }
}

# # Checks for difficulty
# is_pirate_waves_very_easy = {
# 	any_playable_country = {
# 		is_pirate_waves_player = yes
# 		# has_country_flag = pirate_waves_very_easy
# 		check_variable = { which = pirate_waves_difficulty value = 0 }
# 	}
# }

# is_pirate_waves_easy = {
# 	is_pirate_waves_very_easy = no
# 	any_playable_country = {
# 		is_pirate_waves_player = yes
# 		# has_country_flag = pirate_waves_easy
# 		check_variable = { which = pirate_waves_difficulty value = 1 }
# 	}
# }

# is_pirate_waves_medium = {
# 	NOR = {
# 		is_pirate_waves_very_easy = yes
# 		is_pirate_waves_easy = yes
# 	}
# 	any_playable_country = {
# 		is_pirate_waves_player = yes
# 		# has_country_flag = pirate_waves_medium
# 		check_variable = { which = pirate_waves_difficulty value = 2 }
# 	}
# }

# is_pirate_waves_hard = {
# 	NOR = {
# 		is_pirate_waves_very_easy = yes
# 		is_pirate_waves_easy = yes
# 		is_pirate_waves_medium = yes
# 	}
# 	any_playable_country = {
# 		is_pirate_waves_player = yes
# 		# has_country_flag = pirate_waves_hard
# 		check_variable = { which = pirate_waves_difficulty value = 3 }
# 	}
# }

# is_pirate_waves_insane = {
# 	NOR = {
# 		is_pirate_waves_very_easy = yes
# 		is_pirate_waves_easy = yes
# 		is_pirate_waves_medium = yes
# 		is_pirate_waves_hard = yes
# 	}
# 	any_playable_country = {
# 		is_pirate_waves_player = yes
# 		# has_country_flag = pirate_waves_insane
# 		check_variable = { which = pirate_waves_difficulty value = 4 }
# 	}
# }

# LEGACY
# DEPRECATED Check for ship count.
# is_pirate_waves_spawn_allowed = {
# 	event_target:current_pirate_country = {
# 		OR = {
# 			AND = {
# 				is_pirate_waves_very_easy = yes
# 				num_ships < @count_ship_very_easy
# 			}
# 			AND = {
# 				is_pirate_waves_easy = yes
# 				num_ships < @count_ship_easy
# 			}
# 			AND = {
# 				is_pirate_waves_medium = yes
# 				num_ships < @count_ship_medium
# 			}
# 			AND = {
# 				is_pirate_waves_hard = yes
# 				num_ships < @count_ship_hard
# 			}
# 			AND = {
# 				is_pirate_waves_insane = yes
# 				num_ships < @count_ship_insane
# 			}
# 		}
# 	}
# }

# Checks if planet is pirate raiding target.
is_pirate_waves_raiding_planet = {
	OR = {
		has_mining_station = yes
		has_research_station = yes
		has_observation_outpost = yes
		# has_hostile_orbital_station = yes
		AND = {
			has_orbital_station = yes
			orbital_station = {
				exists = owner
				owner = {
					NOT = { is_same_empire = event_target:pirate_waves_fleet.owner }
				}
			}
		}
		any_fleet_in_orbit = {
			is_ship_class = shipclass_military_station
			exists = owner
			NOT = { is_owned_by = event_target:pirate_waves_fleet.owner }
		}
	}
}

# Check to see if a planet has a military station.
has_military_station = {
	OR = {
		AND = {
			has_orbital_station = yes
			orbital_station = { is_ship_class = shipclass_military_station }
		}
		any_fleet_in_orbit = {
			is_ship_class = shipclass_military_station
		}
		# solar_system = {
		# 	any_fleet_in_system = {
		# 		is_ship_class = shipclass_military_station
		# 		exists = orbit
		# 		orbit = { is_same_value = prevprevprev.orbit }
		# 	}
		# }
	}
}

# LEGACY
# Check to see if a planet has a hostile military station.
# has_hostile_orbital_station = {
# 	OR = {
# 		any_orbital_station = {
# 			exists = owner
# 			owner = {
# 				NOT = { is_same_value = event_target:current_pirate_country }
# 			}
# 		}
# 		solar_system = {
# 			any_fleet_in_system = {
# 				is_ship_class = shipclass_military_station
# 				exists = orbit
# 				orbit = { is_same_value = prevprevprev }
# 				exists = owner
# 				owner = {
# 					NOT = { is_same_empire = event_target:current_pirate_country }
# 				}
# 			}
# 		}
# 	}
# }

# Checks if planet is suitable as a base.
is_pirate_waves_base_planet = {
	is_star = no
	has_military_station = no
	# NOR = {
	# 	is_planet_class = pc_gas_giant
	# 	is_planet_class = pc_molten
	# 	is_planet_class = pc_toxic
	# 	is_planet_class = pc_broken
	# 	is_planet_class = pc_shattered
	# 	is_planet_class = pc_frozen
	# 	is_planet_class = pc_ice_asteroid
	# }
	OR = {
		is_asteroid = yes
		colonizable_planet = yes		# habitable_planet
		is_planet_class = pc_barren
		is_planet_class = pc_barren_cold
		# is_planet_class = pc_machine
		# is_planet_class = pc_gaia
		# is_planet_class = pc_continental
		# is_planet_class = pc_ringworld_habitable
		# is_planet_class = pc_tropical
		# is_planet_class = pc_ocean
		# is_planet_class = pc_arid
		# is_planet_class = pc_desert
		# is_planet_class = pc_tundra
		# is_planet_class = pc_arctic
		# is_planet_class = pc_alpine
		# is_planet_class = pc_savannah
	}
}

# Complex check to support automated testing.
# When using human_ai, multiple countries have is_ai = no.
# When using observe, no country has is_ai = no
is_pirate_waves_player = {
	is_variable_set = pirate_waves_chance
	check_variable = { which = pirate_waves_chance value != 0 }
	# NOT = { has_policy_flag = pirate_waves_0 }
	# OR = {
	# 	AND = {
	# 		is_ai = no
	# 		NOT = { has_policy_flag = pirate_waves_0 }
	# 	}
	# 	AND = {
	# 		has_policy_flag = tutorial_level_picked
	# 		NOT = {
	# 			any_playable_country = { is_ai = no }
	# 		}
	# 	}
	# }
}

# DEPRECATED/LEGACY
# Has a fleet build the station.
# has_pirate_waves_fleet_build_station = {
# 	ROOT = {
# 		solar_system = {
# 			any_fleet_in_system = {
# 				NOT = { is_ship_class = shipclass_military_station }
# 				exists = owner
# 				is_owned_by = event_target:current_pirate_country
# 			}
# 		}
# 	}
# }

# TODO: Remove with 3.6
# DEPRECATED/LEGACY
# Compares pirate country with closest country.
is_pirate_waves_closest_country_pathetic = {
	exists = event_target:current_pirate_country
	ROOT = {
		closest_system = {
			limit = { exists = space_owner }
			space_owner = {
				relative_power = {
					who = event_target:current_pirate_country
					category = fleet
					value = pathetic
				}
			}
		}
	}
}

# DEPRECATED/LEGACY
is_pirate_waves_closest_country_inferior = {
	exists = event_target:current_pirate_country
	ROOT = {
		closest_system = {
			limit = { exists = space_owner }
			space_owner = {
				relative_power = {
					who = event_target:current_pirate_country
					category = fleet
					value = inferior
				}
			}
		}
	}
}

# DEPRECATED/LEGACY
is_pirate_waves_closest_country_equivalent = {
	exists = event_target:current_pirate_country
	ROOT = {
		closest_system = {
			limit = { exists = space_owner }
			space_owner = {
				relative_power = {
					who = event_target:current_pirate_country
					category = fleet
					value = equivalent
				}
			}
		}
	}
}
