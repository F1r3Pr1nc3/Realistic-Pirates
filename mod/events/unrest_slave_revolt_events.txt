namespace = unrest
# ALL DEPRECATED
# Prior 3.5 events (removed in 3.6)
# SLAVE REVOLT CHAIN #
# Stirrings
# planet_event = {
# 	id = unrest.155
# 	title = unrest.155.name
# 	desc = unrest.155.desc
# 	picture = GFX_evt_alien_propaganda
# 	show_sound = event_planetary_riot
# 	location = root
# 	pre_triggers = {
# 		has_owner = yes
# 		has_ground_combat = no
# 	}
# 	trigger = {
# 		owner = { merg_is_default_empire = yes }
# 		exists = controller
# 		controller = { is_same_empire = root.owner }
# 		planet_stability < @stabilitylevel3
# 		has_orbital_bombardment = no
# 		any_owned_pop = {
# 			NOT = { has_trait = trait_mechanical }
# 			is_sapient = yes
# 			is_enslaved = yes
# 		}
# 		NOR = {
# 			has_planet_flag = slave_stirring
# 			has_planet_flag = recent_unrest_event
# 			has_modifier = slave_hunger_strike
# 			has_modifier = slave_riots
# 			has_modifier = adding_unrest_slaves
# 			has_modifier = revolt_suppressed
# 		}
# 		NOT = {
# 			owner = {
# 				any_situation = { is_situation_type = situation_planetary_revolt }
# 			}
# 		}
# 	}
# 	mean_time_to_happen = { years = 50 }
# 	immediate = {
# 		add_modifier = { modifier = adding_unrest_slaves years = 20 }
# 		set_timed_planet_flag = {
# 			flag = recent_unrest_event
# 			days = 720 # @unrest_event_cooldown?
# 		}
# 		set_planet_flag = slave_revolt_chain_active
# 		set_timed_planet_flag = { flag = slave_stirring years = 20 }
# 		root.owner = { set_country_flag = slave_revolt_chain_active }
# 		save_event_target_as = revolt_planet
# 		planet_event = { id = unrest.170 days = 720 random = 10 }
# 	}
# 	option = { name = unrest.155.a }
# }
# Chain Gatekeeper Event
# planet_event = {
# 	id = unrest.170
# 	hide_window = yes
# 	is_triggered_only = yes
# 	pre_triggers = {
# 		has_owner = yes
# 		has_ground_combat = no
# 	}
# 	trigger = {
# 		owner = {
# 			merg_is_default_empire = yes
# 			has_country_flag = slave_revolt_chain_active
# 		}
# 		exists = controller
# 		controller = { is_same_empire = root.owner }
# 		has_orbital_bombardment = no
# 	}
# 	immediate = {
# 		# Fire Resistance
# 		if = {
# 			limit = {
# 				planet_stability < @stabilitylevel2
# 				any_owned_pop = {
# 					not = { has_trait = trait_mechanical }
# 					is_sapient = yes
# 					is_enslaved = yes
# 				}
# 				has_planet_flag = slave_stirring
# 				NOR = {
# 					has_planet_flag = slave_resistance
# 					has_planet_flag = recent_unrest_event
# 				}
# 			}
# 			planet_event = { id = unrest.158 }
# 		}
# 		# Fire Riots
# 		if = {
# 			limit = {
# 				planet_stability < @stabilitylevel1
# 				any_owned_pop = {
# 					not = { has_trait = trait_mechanical }
# 					is_sapient = yes
# 					is_enslaved = yes
# 				}
# 				has_planet_flag = slave_resistance
# 				NOR = {
# 					has_planet_flag = slave_riots
# 					has_planet_flag = recent_unrest_event
# 				}
# 			}
# 			planet_event = { id = unrest.157 }
# 		}
# 		# Fire Revolt
# 		if = {
# 			limit = {
# 				planet_stability < @stabilitylevel1
# 				check_variable = { which = unrest_50 value > 36 }
# 				has_planet_flag = slave_riots
# 				any_owned_pop = {
# 					not = { has_trait = trait_mechanical }
# 					is_sapient = yes
# 					is_enslaved = yes
# 				}
# 				NOR = {
# 					has_planet_flag = slave_revolt
# 					has_planet_flag = recent_unrest_event
# 				}
# 			}
# 			planet_event = { id = unrest.160 }
# 			set_variable = { which = unrest_50 value = 0 }
# 		}
# 		planet_event = { id = unrest.170 days = 60 }
# 	}
# }
# Resistance gatekeeper event
# planet_event = {
# 	id = unrest.158
# 	hide_window = yes
# 	pre_triggers = { has_owner = yes }
# 	trigger = {
# 		owner = { merg_is_default_empire = yes }
# 		exists = controller
# 		controller = { is_same_empire = root.owner }
# 		planet_stability < @stabilitylevel2
# 		any_owned_pop = {
# 			not = { has_trait = trait_mechanical }
# 			is_sapient = yes
# 			is_enslaved = yes
# 		}
# 		has_planet_flag = slave_stirring
# 		NOR = {
# 			has_planet_flag = slave_resistance
# 			has_planet_flag = recent_unrest_event
# 		}
# 	}
# 	is_triggered_only = yes
# 	immediate = {
# 		if = {
# 			limit = {
# 				planet_stability < @stabilitylevel2
# 				has_modifier = adding_unrest_slaves
# 				any_owned_pop = {
# 					not = { has_trait = trait_mechanical }
# 					is_sapient = yes
# 					is_enslaved = yes
# 				}
# 			}
# 			random_list = {
# 				50 = { planet_event = { id = unrest.156 } }
# 				50 = { planet_event = { id = unrest.159 } }
# 			}
# 		} else = {
# 			planet_event = { id = unrest.159 }
# 		}
# 		planet_event = { id = unrest.157 days = 721 random = 10 }
# 	}
# }
# Revolt
# planet_event = {
# 	id = unrest.160
# 	title = unrest.160.name
# 	desc = unrest.160.desc
# 	picture = GFX_evt_surrender
# 	show_sound = event_planetary_riot
# 	location = root
# 	pre_triggers = { has_owner = yes }
# 	trigger = {
# 		owner = { merg_is_default_empire = yes }
# 		exists = controller
# 		controller = { is_same_empire = root.owner }
# 		planet_stability < @stabilitylevel1
# 		has_planet_flag = slave_riots
# 		any_owned_pop = { is_enslaved = yes }
# 		NOR = {
# 			has_planet_flag = slave_revolt
# 			has_planet_flag = recent_unrest_event
# 		}
# 	}
# 	is_triggered_only = yes
# 	immediate = {
# 		random_owned_pop = {
# 			limit = { is_enslaved = yes }
# 			save_event_target_as = leader_pop
# 		}
# 		create_rebels = {
# 			name = random
# 			ethos = {
# 				ethic = "ethic_fanatic_egalitarian"
# 				ethic = "ethic_militarist"
# 			}
# 			authority = auth_democratic
# 			civics = random
# 			origin = "origin_separatists"
# 			species = event_target:leader_pop.species
# 			flag = random
# 			effect = {
# 				set_country_flag = slave_rebels
# 				save_event_target_as = rebelling_slaves
# 				establish_communications_no_message = root.owner
# 				set_relation_flag = { flag = rebelling_slaves_former_owner who = root.owner }
# 				root = {
# 					owner = {
# 						every_relation = {
# 							limit = { has_communications = prev }
# 							establish_communications_no_message = prevprevprev
# 						}
# 					}
# 					every_planet_army = {
# 						limit = {
# 							army_type = slave_army
# 							is_owned_by = planet.owner
# 						}
# 						set_owner = event_target:rebelling_slaves
# 					}
# 					every_owned_pop = {
# 						limit = { is_enslaved = yes }
# 						planet = {
# 							while = {
# 								count = 2
# 								create_army = {
# 									name = "NAME_Freedom_Fighters"
# 									owner = event_target:rebelling_slaves
# 									species = event_target:leader_pop.species
# 									type = "rebel_slave_defense_army"
# 								}
# 							}
# 						}
# 					}
# 				}
# 				create_leader = {
# 					class = ruler
# 					species = owner_main_species
# 					name = random
# 					skill = 2
# 					traits = {}
# 				}
# 				assign_leader = last_created_leader
# 				ruler = { add_random_leader_trait = yes }
# 			}
# 		}
# 		set_planet_flag = slave_revolt
# 		set_timed_planet_flag = { flag = recent_unrest_event years = 2 }
# 	}
# 	option = {
# 		name = unrest.160.a
# 		custom_tooltip = unrest.160.a.tooltip
# 	}
# }
# Revolt Suppressed # on_planet_defenders_win
country_event = {
	id = unrest.161
	title = unrest.161.name
	desc = unrest.161.desc
	picture = GFX_evt_announcement
	show_sound = event_announcement
	location = event_target:revolt_planet
	trigger = {
		merg_is_default_empire = yes
		fromfrom = {
			has_planet_flag = slave_revolt
			controller = { is_same_empire = root }
		}
	}
	is_triggered_only = yes
	immediate = {
		remove_country_flag = slave_revolt_chain_active
		fromfrom = {
			add_modifier = {
				modifier = revolt_suppressed
				days = 3600
			}
			save_event_target_as = revolt_planet
			remove_planet_flag = slave_revolt_chain_active
			remove_planet_flag = slave_riots
			remove_planet_flag = slave_resistance
			remove_planet_flag = slave_stirring
			remove_planet_flag = slave_revolt
			if = { limit = { has_modifier = slave_hunger_strike }
				remove_modifier = slave_hunger_strike
			}
			if = { limit = { has_modifier = adding_unrest_slaves }
				remove_modifier = adding_unrest_slaves
			}
			if = { limit = { has_modifier = slave_riots }
				remove_modifier = slave_riots
			}
		}
	}
	option = {
		name = unrest.161.a
		tooltip = {
			add_modifier = {
				modifier = revolt_suppressed
				days = 3600
			}
		}
		custom_tooltip = unrest.161.a.tooltip
	}
}

# Triggers country_event for the defender upon defeat (on_planet_defenders_lose)
# This = country, planet owner
# From = country, attack leader
# fromfrom = planet
# Revolt Lost #
country_event = {
	id = unrest.167
	title = unrest.167.name
	desc = unrest.167.desc
	picture = GFX_evt_surrender
	show_sound = event_air_raid_siren
	location = event_target:revolt_planet
	is_triggered_only = yes
	trigger = {
		From = { is_country_type = rebel }
		fromfrom = { has_planet_flag = slave_revolt }
	}
	immediate = {
		fromfrom = {
			save_event_target_as = revolt_planet
			remove_planet_flag = slave_revolt_chain_active
			remove_planet_flag = slave_riots
			remove_planet_flag = slave_resistance
			remove_planet_flag = slave_stirring
			remove_planet_flag = slave_revolt
			if = { limit = { has_modifier = slave_hunger_strike }
				remove_modifier = slave_hunger_strike
			}
			if = { limit = { has_modifier = adding_unrest_slaves }
				remove_modifier = adding_unrest_slaves
			}
			if = { limit = { has_modifier = slave_riots }
				remove_modifier = slave_riots
			}
			kill_leader = { type = governor }
		}
		From = { save_event_target_as = rebel_country }
		remove_country_flag = slave_revolt_chain_active
		save_event_target_as = old_owner
		fromfrom.solar_system = {
			if = { limit = { exists = starbase }
				starbase = { set_owner = event_target:rebel_country }
			}
			add_claims = {
				who = event_target:old_owner
				num_of_claims = 1
				show_notification = no
			}
		}
		if = {
			limit = {
				any_playable_country = {
					is_egalitarian = yes
					has_policy_flag = slavery_not_allowed
					has_communications = root
					any_owned_planet = {
						distance = {
							source = fromfrom
							max_distance <= 300
							min_distance >= 0
						}
					}
					NOR = {
						is_in_federation_with = root
						is_same_empire = root
					}
				}
			}
			random_playable_country = {
				limit = {
					is_egalitarian = yes
					has_policy_flag = slavery_not_allowed
					has_communications = root
					any_owned_planet = {
						distance = {
							source = fromfrom
							max_distance <= 300
							min_distance >= 0
						}
					}
					NOR = {
						is_in_federation_with = root
						is_same_empire = root
					}
				}
				country_event = { id = unrest.168 days = 4 }
			}
		}
	}
	option = { name = unrest.167.a }
	option = { name = unrest.167.b }
}

# Defect request #
country_event = {
	id = unrest.168
	desc = unrest.168.desc
	location = event_target:revolt_planet
	title = TRANSMISSION
	diplomatic = yes
	picture_event_data = {
		portrait = event_target:rebel_country
		planet_background = event_target:rebel_country.capital_scope
		city_level = event_target:rebel_country.capital_scope
		room = event_target:rebel_country.ruler
	}
	trigger = { exists = event_target:old_owner }
	# immediate = { save_event_target_as = new_owner }
	is_triggered_only = yes
	# YES!
	option = {
		name = unrest.168.a
		ai_chance = { factor = 100 }
		event_target:revolt_planet = {
			set_owner = root
			solar_system = {
				if = { limit = { exists = starbase }
					starbase = { set_owner = root }
				}
			}
		}
		hidden_effect = {
			event_target:old_owner = {
				country_event = { id = unrest.169 }
			}
			event_target:rebel_country = { set_country_flag = silence_destroy_event }
			event_target:rebel_country = { destroy_country = yes }
		}
		custom_tooltip = unrest.168.a.tooltip
		event_target:revolt_planet = {
			add_modifier = { modifier = slaves_defected years = 20 }
		}
	}
	# NO!
	option = {
		name = unrest.168.b
		ai_chance = { factor = 0 }
	}
}

# Slaves Defect Diplomatic Message #
country_event = {
	id = unrest.169
	desc = unrest.169.desc
	location = event_target:revolt_planet
	title = TRANSMISSION
	diplomatic = yes
	picture_event_data = {
		portrait = from
		planet_background = from.capital_scope
		# graphical_culture = event_target:book_writer
		city_level = from.capital_scope
		room = from.ruler
	}
	is_triggered_only = yes
	option = {
		name = unrest.169.a
		add_opinion_modifier = {
			modifier = opinion_took_in_rebels
			who = from
		}
	}
	option = {
		name = unrest.169.b
		add_opinion_modifier = {
			modifier = opinion_took_in_rebels
			who = from
		}
	}
	option = {
		name = unrest.169.c
		add_opinion_modifier = {
			modifier = opinion_took_in_rebels
			who = from
		}
	}
}

# End chain if no more slaves # on_monthly_pulse
event = {
	id = unrest.162
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		any_playable_country = {
			has_country_flag = slave_revolt_chain_active
			any_owned_planet = {
				has_planet_flag = slave_revolt_chain_active
				controller = { is_same_empire = owner }
			}
		}
	}
	immediate = {
		every_playable_country = {
			limit = {
				has_country_flag = slave_revolt_chain_active
				any_owned_planet = { has_planet_flag = slave_revolt_chain_active }
			}
			every_owned_planet = {
				limit = {
					has_planet_flag = slave_revolt_chain_active
					NOT = {
						any_owned_pop = { is_enslaved = yes }
					}
				}
				planet_event = { id = unrest.163 }
			}
		}
	}
}

# Planet Pacified # on_monthly_pulse
event = {
	id = unrest.164
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		any_playable_country = {
			has_country_flag = slave_revolt_chain_active
			any_owned_planet = {
				has_planet_flag = slave_revolt_chain_active
				planet_stability >= @stabilitylevel3
				NOR = {
					has_modifier = slave_hunger_strike
					has_modifier = adding_unrest_slaves
					has_modifier = slave_riots
				}
			}
		}
	}
	immediate = {
		random_playable_country = {
			limit = {
				has_country_flag = slave_revolt_chain_active
				any_owned_planet = {
					has_planet_flag = slave_revolt_chain_active
					planet_stability >= @stabilitylevel3
					NOR = {
						has_modifier = slave_hunger_strike
						has_modifier = adding_unrest_slaves
						has_modifier = slave_riots
					}
				}
			}
			random_owned_planet = {
				limit = {
					has_planet_flag = slave_revolt_chain_active
					planet_stability >= @stabilitylevel3
					NOR = {
						has_modifier = slave_hunger_strike
						has_modifier = adding_unrest_slaves
						has_modifier = slave_riots
					}
				}
				planet_event = { id = unrest.165 }
			}
		}
	}
}

# From unrest.164
planet_event = {
	id = unrest.165
	title = unrest.165.name
	desc = unrest.165.desc
	picture = GFX_evt_surrender
	show_sound = event_administrative_work
	location = root
	is_triggered_only = yes
	immediate = {
		save_event_target_as = revolt_planet
		remove_planet_flag = slave_revolt_chain_active
		remove_planet_flag = slave_riots
		remove_planet_flag = slave_resistance
		remove_planet_flag = slave_stirring
		remove_planet_flag = slave_revolt
		root.owner = { remove_country_flag = slave_revolt_chain_active }
	}
	option = { name = OK }
}
